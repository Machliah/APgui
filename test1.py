"""
from strongholds import Strongholds
import numpy as np
from utils import get_nether_coords, get_mc_angle

testtestest = [
    (20335, -2434),
    (19603, -5928),
    (16901, -4172),
    (13861, -3658),
    (10793, -3225),
    (7740, -2683),
    (8548, -7336),
    (9392, -10831),
    (10612, -13799),
    (13417, -11092),
    (12168, -7581),
    (15549, -7828),
    (18276, -9242),
    (16393, -12276),
    (18499, -14577),
    (14013, -14936),
    (11206, -17142),
    (8059, -18828),
    (6397, -22667),
    (4667, -19941),
    (1134, -20449),
    (-2434, -20335),
    (-307, -17405),
    (-2612, -14096),
    (-4172, -16901),
    (-5928, -19603),
    (-8148, -22098),
    (-9242, -18276),
    (-7828, -15549),
    (-6651, -12700),
    (-4335, -10396),
    (-160, -8190),
    (268, -11261),
    (1659, -14240),
    (3574, -17037),
    (7276, -15815),
    (5783, -13118),
    (4825, -10178),
    (4685, -6720),
    (1994, -4716),
    (-1143, -1699),
    (-3087, -4085),
    (-4943, -6532),
    (-8189, -7734),
    (-10099, -10175),
    (-11092, -13417),
    (-12276, -16393),
    (-14936, -14013),
    (-19580, -13088),
    (-17142, -11206),
    (-13799, -10612),
    (-12649, -6747),
    (-15815, -7276),
    (-18828, -8059),
    (-19941, -4667),
    (-17037, -3574),
    (-14076, -2719),
    (-10627, -3735),
    (-7839, -2379),
    (-5081, 631),
    (-7740, 2683),
    (-11227, 910),
    (-14252, 1551),
    (-17405, 307),
    (-20449, -1134),
    (-23534, 920),
    (-20335, 2434),
    (-16901, 4172),
    (-19603, 5928),
    (-18276, 9242),
    (-15549, 7828),
    (-13162, 5683),
    (-9886, 5398),
    (-10902, 9310),
    (-13417, 11092),
    (-16393, 12276),
    (-18499, 14577),
    (-14013, 14936),
    (-10612, 13799),
    (-11206, 17142),
    (-8059, 18828),
    (-6397, 22667),
    (-4667, 19941),
    (-1134, 20449),
    (2434, 20335),
    (5928, 19603),
    (8148, 22098),
    (9242, 18276),
    (7828, 15549),
    (4683, 13549),
    (4172, 16901),
    (307, 17405),
    (482, 14328),
    (2079, 11071),
    (160, 8190),
    (-2604, 10959),
    (-3763, 13833),
    (-3574, 17037),
    (-7276, 15815),
    (-7673, 12110),
    (-6836, 8952),
    (-4685, 6720),
    (-1994, 4716),
    (-900, 1840),
    (3087, 4085),
    (4943, 6532),
    (6402, 9268),
    (8469, 11567),
    (11092, 13417),
    (12276, 16393),
    (14936, 14013),
    (19580, 13088),
    (17142, 11206),
    (18828, 8059),
    (15815, 7276),
    (13799, 10612),
    (11502, 8557),
    (9618, 5863),
    (13513, 4786),
    (17037, 3574),
    (19941, 4667),
    (18499, -14577),
]

test_sh = Strongholds()

#print(get_mc_angle((6, 7), (2, 7)))
#print(get_mc_angle((-8, 12), (-8, 2)))
#print(get_mc_angle((-17, 4), (7, -13)))

#print(get_nether_coords((1582, 26515)))

for sh in [
    (1512, -104),
    (5736, -712),
    (7512, 2280),
    (10584, 1368),
    (14168, 584),
    (17704, -312),
    (20920, 1160),
    (23528, -920),
]:
    test_sh.complete_sh(sh)

#print(test_sh.completed)
#print(test_sh.get_completed_count())

vec1 = np.array([-900, -1840])
vec2 = np.array([1, 0])

#print(np.arctan2(vec2[1], vec2[0]))
ang = np.arctan2(vec1[1], vec1[0]) - np.arctan2(vec2[1], vec2[0])

# ang = np.arctan2(-1, -1)
# ang = np.arctan2(vec1[1], vec1[0]) - np.arctan2(1, 0)
#print(round((ang * 180 / np.pi), 2))
# print(np.pi / 2, np.arctan2(1, 0))

vec2 = np.array([1, 0])
#print(np.arctan2(vec2[1], vec2[0]))

#print(np.arctan2(0, 1))
#print(np.arctan2(1512, -104))
#print(np.arctan2(1512, -104) - np.arctan2(1, 0))


test = [[], [], [3, 6], [], [], [], [], [1, 2, 3]]


test[4].append(3)

#print(str(test), len(test), len(test[4]))

rings = 0
for ring in test:
    if len(ring) > 0:
        rings += 1
#print(rings)

total = 0
for i in test:
    total += len(i)
#print(total)

print(1 + True)
"""

"""
mylst = [1,2,3]
for num in mylst:
    match num:
        case 1:
            print(1)
        case 2:
            print(2)
        case 3:
            print(3)
"""

class Car():
    def __init__(self, make: str="honda", model: int=3, colour: str="pink"):
        self.make = make
        self.model=model
        self.colour=colour

mycar = Car(colour="blue")
print(mycar.colour)